
import java.awt.Color;
import java.awt.Font;
import static java.lang.Double.sum;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author DELL
 */
public class BankTransaction extends javax.swing.JFrame {

    DefaultTableModel dm;
    Connection conn;
    ResultSet rs;
    PreparedStatement pst;

    /**
     * Creates new form BankTransaction
     */
    public BankTransaction() {
        super("Bank Transaction");
        initComponents();
        conn = javaconnect.getConnection();
        FillBank();
        clock();
        fetch();
    }

    public void clock() {
        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        date.setText(year + "-" + (month + 1) + "-" + day);
    }

    public void clear() {
        jComboBox1.setSelectedItem("Select Bank");
        accno.setText("");
        jTextField3.setText("");
        paytype.setSelectedItem("Select Transaction");
    }
     //search engine
    private void filter(String query) {
        dm = (DefaultTableModel) table1.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(dm);
        table1.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    public void fetch() {
        try {
            JTableHeader header = table1.getTableHeader();
            header.setForeground(Color.red);
            header.setFont(new Font("Tahome", Font.ITALIC, 12));
            String q = "select id as 'Id',bank_name as 'Bank Name',bank_acc_no as 'Bank Ac No',total as 'Total' from bank_totalling order by id desc";
//            String q = "select item_date as Receiving_Date from item ORDER BY id DESC";
            pst = conn.prepareStatement(q);
            rs = pst.executeQuery();
            table1.setModel(DbUtils.resultSetToTableModel(rs));
            //increasing the width of columns
            TableColumnModel columnModel = table1.getColumnModel();
            columnModel.getColumn(0).setPreferredWidth(30);
            columnModel.getColumn(1).setPreferredWidth(80);
            columnModel.getColumn(2).setPreferredWidth(80);
            columnModel.getColumn(3).setPreferredWidth(30);

            columnModel.getColumn(4).setPreferredWidth(100);
//            columnModel.getColumn(5).setPreferredWidth(45);
            columnModel.getColumn(6).setPreferredWidth(50);
        } catch (Exception e) {

        }
    }

    public void FillBank() {
        try {
            String sql = "select DISTINCT bank_name from bank";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                jComboBox1.addItem(rs.getString("bank_name"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void FillAccNo() {
        try {
            String sql = "select bank_ac_no from bank where bank_name='" + jComboBox1.getSelectedItem() + "'";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                accno.setText(rs.getString("bank_ac_no"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        search_text = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        paytype = new javax.swing.JComboBox();
        accno = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(99, 114, 139));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setText("Bank Transaction");

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel12.setText("Search");

        search_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                search_textKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_textKeyReleased(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Sitka Heading", 3, 14)); // NOI18N
        jButton2.setText("DayBook");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(206, 206, 206)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(search_text, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(180, 180, 180))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel12)
                    .addComponent(search_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(236, 224, 228));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setText("Bank Name");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 100, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel4.setText("Ac No");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 60, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel5.setText("Transaction Type");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 110, 20));

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel11.setText("Date");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 60, 20));

        jPanel4.setBackground(new java.awt.Color(231, 202, 231));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel2.setText("Transaction Details");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 240, -1));

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 360, 70));

        jComboBox1.setFont(new java.awt.Font("Sitka Heading", 3, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Bank" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 160, -1));

        paytype.setFont(new java.awt.Font("Sitka Heading", 3, 12)); // NOI18N
        paytype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Transaction", "Deposit", "Withdraw", "Interest Amount" }));
        paytype.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                paytypePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jPanel3.add(paytype, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 160, -1));

        accno.setEditable(false);
        jPanel3.add(accno, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 160, -1));
        jPanel3.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 160, -1));

        jButton1.setFont(new java.awt.Font("Sitka Heading", 3, 12)); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, 70, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel13.setText("Amount");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 100, 20));

        date.setEditable(false);
        jPanel3.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 160, -1));

        table1 = new JTable()
        {
            public boolean isCellEditable(int row, int column)
            {
                for(int i=0;i<table1.getRowCount();i++)
                {
                    if(row ==i)
                    {
                        return false;
                    }
                }
                return true;
            }
        };
        table1.setBackground(new java.awt.Color(255, 204, 204));
        table1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table1.setFont(new java.awt.Font("Sitka Subheading", 1, 12)); // NOI18N
        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)))
        );

        setSize(new java.awt.Dimension(1272, 634));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void search_textKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_textKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_textKeyPressed

    private void search_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_textKeyReleased
        // TODO add your handling code here:
        String query = search_text.getText();
        filter(query);
    }//GEN-LAST:event_search_textKeyReleased

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        FillAccNo();

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void paytypePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_paytypePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_paytypePopupMenuWillBecomeInvisible

    public boolean bankValidation() {
        if (jComboBox1.getSelectedItem() == "Select Bank") {
            return false;
        }
        return true;
    }

    public boolean transactionValidation() {
        if (paytype.getSelectedItem() == "Select Transaction") {
            return false;
        }
        return true;
    }

    public boolean amountValidation() {
        if (jTextField3.getText().equals("")) {
            return false;
        }
        return true;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (!bankValidation()) {
            JOptionPane.showMessageDialog(null, "Please Select Bank");
            return;
        }
        if (!transactionValidation()) {
            JOptionPane.showMessageDialog(null, "Please Select Transaction Type");
            return;
        }
        if (!amountValidation()) {
            JOptionPane.showMessageDialog(null, "Please Enter Amount");
            return;
        }
        String sqll = "insert into bank_transaction(bank_name,bank_ac_no,transaction_type,amount,date)values(?,?,?,?,?)";
        try {
            pst = conn.prepareStatement(sqll);
            pst.setString(1, (String) jComboBox1.getSelectedItem());
            pst.setString(2, accno.getText());
            pst.setString(3, (String) paytype.getSelectedItem());
            pst.setString(4, jTextField3.getText());
            pst.setString(5, date.getText());
            pst.execute();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        String s = "select * from bank_totalling where bank_name = '" + jComboBox1.getSelectedItem() + "' ORDER BY id DESC LIMIT 1";
        try {
            pst = conn.prepareStatement(s);
            rs = pst.executeQuery(s);
            //new party
            if (rs.next() == false) {
                String sql2 = "insert into bank_totalling(bank_name,bank_acc_no,total_amount,total)values(?,?,?,?)";
                try {
                    pst = conn.prepareStatement(sql2);
                    pst.setString(1, (String) jComboBox1.getSelectedItem());
                    pst.setString(2, accno.getText());
                    pst.setString(3, jTextField3.getText());
                    pst.setString(4, jTextField3.getText());
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Added Succesfully");
                    clear();
                    fetch();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else {
                String sql22 = "select * from bank_transaction where bank_name = '" + jComboBox1.getSelectedItem() + "' ORDER BY id DESC LIMIT 1";
                try {
                    pst = conn.prepareStatement(sql22);
                    rs = pst.executeQuery(sql22);
                    rs.first();
//                        {
                    String type = rs.getString("transaction_type");
                    int money = Integer.parseInt(rs.getString("amount"));
                    if (type.equals("Withdraw")) {
                        String sql23 = "select * from bank_totalling where bank_name = '" + jComboBox1.getSelectedItem() + "'";
                        try {
                            pst = conn.prepareStatement(sql23);
                            rs = pst.executeQuery(sql23);
                            rs.first();
                            int total = Integer.parseInt(rs.getString("total"));
                            int newTotal = total - money;
                            String updatesql = "update bank_totalling set total = '" + newTotal + "' where bank_name = '" + jComboBox1.getSelectedItem() + "'";
                            try {
                                pst = conn.prepareStatement(updatesql);
                                pst.execute();
                                JOptionPane.showMessageDialog(null, "Added succesfully");
                                clear();
                                fetch();
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    } else if (type.equals("Deposit")) {
                        String sql23 = "select * from bank_totalling where bank_name = '" + jComboBox1.getSelectedItem() + "'";
                        try {
                            pst = conn.prepareStatement(sql23);
                            rs = pst.executeQuery(sql23);
                            rs.first();
                            int total = Integer.parseInt(rs.getString("total"));
                            int newTotal = total + money;
                            String updatesql = "update bank_totalling set total = '" + newTotal + "' where bank_name = '" + jComboBox1.getSelectedItem() + "'";
                            try {
                                pst = conn.prepareStatement(updatesql);
                                pst.execute();
                                JOptionPane.showMessageDialog(null, "Added succesfully");
                                clear();
                                fetch();
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    } else {
                        String sql23 = "select * from bank_totalling where bank_name = '" + jComboBox1.getSelectedItem() + "'";
                        try {
                            pst = conn.prepareStatement(sql23);
                            rs = pst.executeQuery(sql23);
                            rs.first();
                            int total = Integer.parseInt(rs.getString("total"));
                            int newTotal = total + money;
                            String updatesql = "update bank_totalling set total = '" + newTotal + "' where bank_name = '" + jComboBox1.getSelectedItem() + "'";
                            try {
                                pst = conn.prepareStatement(updatesql);
                                pst.execute();
                                JOptionPane.showMessageDialog(null, "Added succesfully");
                                clear();
                                fetch();
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        //adding sum value of today date deposited
        String ss = "select * from bank_transaction ORDER BY id DESC";
        try {
            pst = conn.prepareStatement(ss);
            rs = pst.executeQuery(ss);
            if (rs.next()) {
                String aa = "select COUNT(amount) AS c from bank_transaction where transaction_type='Deposit' and date='" + date.getText() + "'";
                try {
                    pst = conn.prepareStatement(aa);
                    rs = pst.executeQuery(aa);
                    if (rs.next()) {
                        int newcount = rs.getInt("c");
                        String aaa = "select SUM(amount) as sum from bank_transaction where transaction_type='Deposit' and date='" + date.getText() + "'";
                        try {
                            pst = conn.prepareStatement(aaa);
                            rs = pst.executeQuery(aaa);
                            while (rs.next()) {
                                String newssql = "update bank_transaction set "
                                        + "deposit= '" + rs.getString("sum") + "'"
                                        + "where transaction_type ='Deposit' and date='" + date.getText() + "'";
                                try {
                                    pst = conn.prepareStatement(newssql);
                                    pst.execute();
                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(null, e);
                                }
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        //updating sum value of withdraw today date
        String sss = "select * from bank_transaction ORDER BY id DESC";
        try {
            pst = conn.prepareStatement(sss);
            rs = pst.executeQuery(sss);
            if (rs.next()) {
                String aa = "select COUNT(amount) AS c from bank_transaction where transaction_type='Withdraw' and date='" + date.getText() + "'";
                try {
                    pst = conn.prepareStatement(aa);
                    rs = pst.executeQuery(aa);
                    if (rs.next()) {
                        int newcount = rs.getInt("c");
                        String aaa = "select SUM(amount) as sum from bank_transaction where transaction_type='Withdraw' and date='" + date.getText() + "'";
                        try {
                            pst = conn.prepareStatement(aaa);
                            rs = pst.executeQuery(aaa);
                            while (rs.next()) {
                                String newssql = "update bank_transaction set "
                                        + "withdraw= '" + rs.getString("sum") + "'"
                                        + "where transaction_type ='Withdraw' and date='" + date.getText() + "' ";
                                try {
                                    pst = conn.prepareStatement(newssql);
                                    pst.execute();
                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(null, e);
                                }
                            }

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        //updating sum value of Interest today date
        String ssss = "select * from bank_transaction ORDER BY id DESC";
        try {
            pst = conn.prepareStatement(ssss);
            rs = pst.executeQuery(ssss);
            if (rs.next()) {
                String aa = "select COUNT(amount) AS c from bank_transaction where transaction_type='Interest Amount' and date='" + date.getText() + "'";
                try {
                    pst = conn.prepareStatement(aa);
                    rs = pst.executeQuery(aa);
                    if (rs.next()) {
                        int newcount = rs.getInt("c");
                        String aaa = "select SUM(amount) as sum from bank_transaction where transaction_type='Interest Amount' and date='" + date.getText() + "'";
                        try {
                            pst = conn.prepareStatement(aaa);
                            rs = pst.executeQuery(aaa);
                            while (rs.next()) {
                                String newssql = "update bank_transaction set "
                                        + "interest= '" + rs.getString("sum") + "'"
                                        + "where transaction_type ='Interest Amount' and date='" + date.getText() + "' ";
                                try {
                                    pst = conn.prepareStatement(newssql);
                                    pst.execute();
                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(null, e);
                                }
                            }

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
////             JOptionPane.showMessageDialog(null,"mouse clicked");
            TableModel model1 = table1.getModel();
            int indexs[] = table1.getSelectedRows();
            Object[] row = new Object[6];
////        
            TransactionDetail td = new TransactionDetail();
            DefaultTableModel model2 = (DefaultTableModel) td.table1.getModel();
//        JOptionPane.showMessageDialog(null,model2);
            for (int i = 0; i < indexs.length; i++) {
                row[0] = model1.getValueAt(indexs[i], 0);
                row[1] = model1.getValueAt(indexs[i], 1);
                row[2] = model1.getValueAt(indexs[i], 2);
                row[3] = model1.getValueAt(indexs[i], 3);
                model2.addRow(row);
            }
            td.setVisible(true);
    }//GEN-LAST:event_table1MouseClicked
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
     BankDaybook s = new BankDaybook();
        s.setVisible(true);   
    }//GEN-LAST:event_jButton2ActionPerformed
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankTransaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accno;
    private javax.swing.JTextField date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JComboBox paytype;
    private javax.swing.JTextField search_text;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables
}
